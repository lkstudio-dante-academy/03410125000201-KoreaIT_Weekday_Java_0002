/*
 * 패키지 (Package) 키워드란?
 * - 패키지를 정의하는 역할을 수행하는 키워드를 의미한다. (+ 즉, 패키지 키워드를 활용하면 Java 클래스를
 * 특정 패키지 하위에 포함 시키는 것이 가능하다.)
 *
 * Java 에서 패키지는 디렉토리를 의미하기 때문에 패키지에 명시하는 경로는 반드시 파일 시스템 상에 경로와
 * 일치해야한다. (+ 즉, 경로가 일치하지 않으면 컴파일 에러가 발생한다는 것을 알 수 있다.)
 */
package Example.Example_01;

/*
 * 프로그래밍 언어 (Programming Language) 란?
 * - 컴퓨터에게 작업을 지시하기 위한 프로그램을 제작하기 위한 언어를 의미한다. (+ 즉, 사용자 (프로그래머) 는
 * 프로그래밍 언어를 통해 컴퓨터와 대화가 가능하다는 것을 알 수 있다.)
 *
 * 프로그래밍 언어는 크게 저수준 언어 (Low Level Language) 와 고수준 언어 (High Level Language) 로
 * 구분된다.
 *
 * 저수준 언어 (Low Level Language) 란?
 * - 컴퓨터가 쉽게 읽을 수 있는 언어를 의미한다. (+ 즉, 저수준 언어는 컴퓨터가 이해하기 쉽지만 사람은
 * 이해하기 어렵다는 것을 알 수 있다.)
 *
 * 저수준 언어 종류
 * - 기계어 (Native Code)
 * - 어셈블리어 (Assembly Language)
 *
 * 위와 같이 저수준 언어는 기계어와 어셈블리어가 존재하며 컴퓨터는 기계어만을 이해 할 수 있다. (+ 즉,
 * 어셈블리어는 컴퓨터가 직접적으로 이해 할 수 없다는 것을 의미한다.)
 *
 * 고수준 언어 (High Level Language) 란?
 * - 사람이 쉽게 읽을 수 있는 언어를 의미한다. (+ 즉, 고수준 언어는 컴퓨터가 직접적으로 이해하지 못한다는 것을
 * 알 수 있다.)
 *
 * 고수준 언어 종류
 * - C/C++
 * - C#
 * - Java
 * - Python
 * - 등등...
 *
 * 위와 같이 고수준 언어는 다양한 종류가 존재한다.
 *
 * 단, 고수준 언어는 컴퓨터가 직접적으로 이해하지 못하기 때문에 고수준 언어로 작성 된 명령문을 컴퓨터가
 * 이해할 수 있는 기계어로 변환해 줄 필요가 있으며 이는 컴파일러 or 인터프리터에 의해서 처리된다. (+ 즉,
 * 컴파일러 or 인터프리터는 사용자 (프로그래머) 와 컴퓨터 사이에 존재하는 통역사라는 것을 알 수 있다.)
 */

/**
 * Example 1 (기초)
 */
public class CE01Example_01 {
	/** 초기화 */
	public static void start(String[] args) {
		/*
		 * System.out 클래스란?
		 * - 콘솔 창에 문장을 출력하는 역할을 수행하는 클래스를 의미한다. (+ 즉, 해당 클래스를 활용하면
		 * 콘솔 창에 다양한 문장을 출력하는 것이 가능하다.)
		 *
		 * System.out.print 메서드 vs System.out.println 메서드
		 * - 두 메서드 모두 콘솔 창에 문장을 출력하는 역할을 수행한다.
		 *
		 * System.out.print 메서드는 단순히 주어진 문장을 출력하는 반면 System.out.println 메서드는
		 * 주어진 문장을 출력 후 자동으로 개행 처리해주는 차이점이 존재한다. (+ 즉, System.out.print 메서드는
		 * 명시적으로 개행 처리를 해주지 않으면 이후 동일한 라인에 문장이 출력된다는 것을 알 수 있다.)
		 */
		System.out.println("Hello, World!");
	}
}
